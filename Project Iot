#include <Esp32WifiManager.h>

#include <WiFi.h>
#include <WiFiClient.h>
#include <WiFiServer.h>


//#include <ESP8266WiFi.h>
#include <ThingerESP32.h>
#include "Wire.h"
#include "U8glib.h"
#include <Adafruit_SSD1306.h>
#define OLED_Address 0x3C // Alamat I2C LCD OLED Display
Adafruit_SSD1306 oled(128, 64); // ukuran LCD OLED = 128x64 pixel

#include <Adafruit_MLX90614.h>
Adafruit_MLX90614 mlx = Adafruit_MLX90614();
#define MUX_Address 0x70 // Kode Alamat TCA9548A
//-----------------------Alamat Wifi-----------------------//
#define SSID "WaipiHenpon"
#define SSID_PASSWORD "amrul12345"
//-----------------------Alamat Thinger.io-----------------------//
#define USERNAME "Amrullah"
#define DEVICE_ID "finalproject"
#define DEVICE_CREDENTIAL "abcde12345"

ThingerESP32 thing(USERNAME, DEVICE_ID, DEVICE_CREDENTIAL);

WiFiServer server(80);

int ledbiru = D8;
int ledmerah = D6;
int ledhijau = D7;

int sensorPin = A0;
int buzzPin = D5;
int x = 0;
int garisx = 0;
int garisy = 0;
int WaktuAkhir = 0;
int WaktuSekarang;
bool Pemeriksaan = false;
bool Selesai = false;
int BPM = 0;
#define UpperThreshold 560
#define LowerThreshold 500

String kondisi_jantung;
String kondisi_suhu;
String kondisi_tubuh;
int jantung;
int suhu;

char tmp_string[8];  // Temp string to convert numeric values to string before print to OLED display
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_FAST);  // Fast I2C / TWI

// Initialize I2C buses using TCA9548A I2C Multiplexer
#define TCAADDR 0x70
void tcaselect(uint8_t i) {
  if (i > 7) return;
  Wire.beginTransmission(TCAADDR);
  Wire.write(1 << i);
  Wire.endTransmission();
}
void setup() {
  Wire.begin();
  Serial.begin(115200);

  pinMode(ledbiru, OUTPUT);
  pinMode(ledmerah, OUTPUT);
  pinMode(ledhijau, OUTPUT);
  digitalWrite(ledmerah, HIGH);
  digitalWrite(ledhijau, HIGH);
  digitalWrite(ledbiru, HIGH);

  //mengirim data ke thinger.io//
  thing.add_wifi(SSID, SSID_PASSWORD);
  thing["finalproject"] >> [](pson & out) {
    out["jantung"] = jantung;
    out["suhu"] = suhu;
    out["kondisi jantung"] = kondisi_jantung;
    out["kondisi suhu"] = kondisi_suhu;
    out["kondisi tubuh"] = kondisi_tubuh;
  };

  tcaselect(0); // alamat I2C OLED LCD Display
  oled.begin(SSD1306_SWITCHCAPVCC, OLED_Address);
  oled.clearDisplay();
  oled.setTextSize(1);
  oled.setTextColor(WHITE);
  oled.setCursor(16, 0); // kolom ke 16 baris ke 0
  oled.print("Tugas Akhir 2016");
  oled.setTextSize(1);
  oled.setTextColor(WHITE);
  oled.setCursor(16, 5);
  oled.print("________________");
  oled.setTextSize(1);
  oled.setTextColor(WHITE);
  oled.setCursor(26, 20);
  oled.print("Amrullah Musa");
  oled.setTextColor(WHITE);
  oled.setCursor(36, 30);
  oled.print("(32316015)");
  oled.setTextColor(WHITE);
  oled.setCursor(29, 40);
  oled.print("Reza Purbaya");
  oled.setTextColor(WHITE);
  oled.setCursor(36, 50);
  oled.print("(32316004)");
  oled.display();
  delay(3000);
  oled.clearDisplay();
  oled.setTextSize(2);

  tcaselect(1); // alamat I2C Sensor MLX90614
  mlx.begin();
}

void loop() {
  thing.handle();
  //----*Program Denyut Jantung*----//
  tcaselect (0); {
    if (x > 127)
    { oled.clearDisplay();
      x = 0;
      garisx = x;
    }
    WaktuSekarang = millis();
    int value = analogRead(0);
    oled.setTextColor(WHITE);
    int y = 60 - (value / 16); //algoritma untuk sinyal frekuensi detak jantung
    oled.writeLine(garisx, garisy, x, y, WHITE); //menampilkan gambar sinyal pada LCD OLED Display
    garisy = y;
    garisx = x;
    if (value > UpperThreshold) {
      if (Selesai)
      { BPM = WaktuSekarang - WaktuAkhir;
        BPM = int(60 / (float(BPM) / 1000)); //detak jantung permenit (60) detik dibagi total milisecond / 1000 milisecond
        Pemeriksaan = false;
        Selesai = false;
        tone(D5, 1000, 250);
      }
      if (Pemeriksaan == false)
      { WaktuAkhir = millis();
        Pemeriksaan = true;
      }
    }
    if ((value < LowerThreshold) & (Pemeriksaan))
      Selesai = true;
    oled.writeFillRect(0, 50, 80, 16, BLACK);
    oled.setCursor(0, 50);
    oled.print("J:");
    oled.print(BPM);
    Serial.print("BPM :");
    Serial.println(BPM);
    oled.display();
    x++;
  }
  //---Program Sensor Suhu Tubuh---//
  tcaselect(1); {
    Serial.print("Suhu Tubuh= ");
    Serial.print(mlx.readObjectTempC());
    Serial.print("S");
    oled.writeFillRect(80, 50, 128, 16, BLACK);
    oled.setCursor(80, 50);
    oled.print("S:");
    oled.print(mlx.readObjectTempC());
    Serial.println();
  }

  int celcius = mlx.readObjectTempC();
  //-----------*Diagnosa Kondisi Jantung Pasien*-----------//
  if (BPM <= 58) {
    kondisi_jantung = "Lemah";
    Serial.print("Kondisi Jantung :");
    Serial.println(kondisi_jantung);
  }
  else if (BPM >= 59 && BPM <= 110) {
    kondisi_jantung = "Normal";
    Serial.print("Kondisi Jantung :");
    Serial.println(kondisi_jantung);
  }
  else if (BPM >= 111) {
    kondisi_jantung = "Cepat";
    Serial.print("Kondisi Jantung :");
    Serial.println(kondisi_jantung);
  }
  //-----------*Diagnosa Kondisi Suhu Pasien*-----------//
  if (celcius <= 34) {
    kondisi_suhu = "Dingin";
    Serial.print("Kondisi suhu :");
    Serial.println(kondisi_suhu);
  }
  else if (celcius >= 35 && celcius <= 38) {
    kondisi_suhu = "Normal";
    Serial.print("Kondisi suhu :");
    Serial.println(kondisi_suhu);
  }
  else if (celcius >= 39) {
    kondisi_suhu = "Panas";
    Serial.print("Kondisi suhu :");
    Serial.println(kondisi_suhu);
  }
  //-----------*Diagnosa Kondisi Tubuh Pasien*-----------//
  if ((celcius <= 34) & (BPM <= 59)) {
    kondisi_tubuh = "Hipotermia Berat";
    Serial.print("Kondisi tubuh :");
    Serial.println(kondisi_tubuh);
    digitalWrite(ledmerah, HIGH);
    digitalWrite(ledhijau, LOW);
    digitalWrite(ledbiru, LOW);
  }
  else if ((celcius <= 34) & (BPM >= 111)) {
    kondisi_tubuh = "Hipoglekimia";
    Serial.print("Kondisi tubuh :");
    Serial.println(kondisi_tubuh);
    digitalWrite(ledmerah, LOW);
    digitalWrite(ledhijau, LOW);
    digitalWrite(ledbiru, HIGH);
  }
  else if ((celcius <= 34) & (BPM >= 60 && BPM <= 110)) {
    kondisi_tubuh = "Hipotermia Ringan";
    Serial.print("Kondisi tubuh :");
    Serial.println(kondisi_tubuh);
    digitalWrite(ledmerah, LOW);
    digitalWrite(ledhijau, LOW);
    digitalWrite(ledbiru, HIGH);
  }
  else if ((celcius >= 35 && celcius <= 38) & (BPM >= 30 && BPM <= 59)) {
    kondisi_tubuh = "Bradikardia Ringan";
    Serial.print("Kondisi tubuh :");
    Serial.println(kondisi_tubuh);
    digitalWrite(ledbiru, LOW);
    digitalWrite(ledmerah, LOW);
    digitalWrite(ledhijau, HIGH);
  }
  else if ((celcius >= 35 && celcius <= 38) & (BPM >= 111)) {
    kondisi_tubuh = "Sinus Takikardia";
    Serial.print("Kondisi tubuh :");
    Serial.println(kondisi_tubuh);
    digitalWrite(ledmerah, LOW);
    digitalWrite(ledhijau, HIGH);
    digitalWrite(ledbiru, LOW);
  }
  else if ((celcius >= 35 && celcius <= 39) & (BPM >= 60 && BPM <= 110)) {
    kondisi_tubuh = "Sehat";
    Serial.print("Kondisi tubuh :");
    Serial.println(kondisi_tubuh);
    digitalWrite(ledbiru, LOW);
    digitalWrite(ledmerah, LOW);
    digitalWrite(ledhijau, HIGH);
  }
  else if ((celcius >= 39) & (BPM >= 111)) {
    kondisi_tubuh = "Heat Exhaustion";
    Serial.print("Kondisi tubuh :");
    Serial.println(kondisi_tubuh);
    digitalWrite(ledmerah, HIGH);
    digitalWrite(ledhijau, LOW);
    digitalWrite(ledbiru, LOW);
  }
  else if ((celcius >= 39) & (BPM <= 59)) {
    kondisi_tubuh = "Hipertermia";
    Serial.print("Kondisi tubuh :");
    Serial.println(kondisi_tubuh);
    digitalWrite(ledmerah, HIGH);
    digitalWrite(ledhijau, LOW);
    digitalWrite(ledbiru, LOW);
  }
  else if ((celcius >= 39) & (BPM >= 60 && BPM <= 110)) {
    kondisi_tubuh = "Demam";
    Serial.print("Kondisi tubuh :");
    Serial.println(kondisi_tubuh);
    digitalWrite(ledmerah, LOW);
    digitalWrite(ledhijau, LOW);
    digitalWrite(ledbiru, HIGH);
  }
  else if ((celcius >= 35 && celcius <= 38) & (BPM <= 29)) {
    kondisi_tubuh = "Bradikardia Berat";
    Serial.print("Kondisi tubuh :");
    Serial.println(kondisi_tubuh);
    digitalWrite(ledbiru, LOW);
    digitalWrite(ledmerah, HIGH);
    digitalWrite(ledhijau, LOW);
  }
  jantung = BPM;
  suhu = celcius;
}
